/*
 * This file is generated by jOOQ.
 */

package edu.java.domain.jooq.tables.pojos;

import java.beans.ConstructorProperties;
import java.io.Serializable;
import java.util.UUID;
import javax.annotation.processing.Generated;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class Repositories implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer repositoryId;
    private UUID linkId;
    private Integer subscribersCount;

    public Repositories() {
    }

    public Repositories(Repositories value) {
        this.repositoryId = value.repositoryId;
        this.linkId = value.linkId;
        this.subscribersCount = value.subscribersCount;
    }

    @ConstructorProperties({"repositoryId", "linkId", "subscribersCount"})
    public Repositories(
        @Nullable Integer repositoryId,
        @Nullable UUID linkId,
        @NotNull Integer subscribersCount
    ) {
        this.repositoryId = repositoryId;
        this.linkId = linkId;
        this.subscribersCount = subscribersCount;
    }

    /**
     * Getter for <code>REPOSITORIES.REPOSITORY_ID</code>.
     */
    @Nullable
    public Integer getRepositoryId() {
        return this.repositoryId;
    }

    /**
     * Setter for <code>REPOSITORIES.REPOSITORY_ID</code>.
     */
    public void setRepositoryId(@Nullable Integer repositoryId) {
        this.repositoryId = repositoryId;
    }

    /**
     * Getter for <code>REPOSITORIES.LINK_ID</code>.
     */
    @Nullable
    public UUID getLinkId() {
        return this.linkId;
    }

    /**
     * Setter for <code>REPOSITORIES.LINK_ID</code>.
     */
    public void setLinkId(@Nullable UUID linkId) {
        this.linkId = linkId;
    }

    /**
     * Getter for <code>REPOSITORIES.SUBSCRIBERS_COUNT</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Integer getSubscribersCount() {
        return this.subscribersCount;
    }

    /**
     * Setter for <code>REPOSITORIES.SUBSCRIBERS_COUNT</code>.
     */
    public void setSubscribersCount(@NotNull Integer subscribersCount) {
        this.subscribersCount = subscribersCount;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Repositories other = (Repositories) obj;
        if (this.repositoryId == null) {
            if (other.repositoryId != null) {
                return false;
            }
        } else if (!this.repositoryId.equals(other.repositoryId)) {
            return false;
        }
        if (this.linkId == null) {
            if (other.linkId != null) {
                return false;
            }
        } else if (!this.linkId.equals(other.linkId)) {
            return false;
        }
        if (this.subscribersCount == null) {
            if (other.subscribersCount != null) {
                return false;
            }
        } else if (!this.subscribersCount.equals(other.subscribersCount)) {
            return false;
        }
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.repositoryId == null) ? 0 : this.repositoryId.hashCode());
        result = prime * result + ((this.linkId == null) ? 0 : this.linkId.hashCode());
        result = prime * result + ((this.subscribersCount == null) ? 0 : this.subscribersCount.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Repositories (");

        sb.append(repositoryId);
        sb.append(", ").append(linkId);
        sb.append(", ").append(subscribersCount);

        sb.append(")");
        return sb.toString();
    }
}
