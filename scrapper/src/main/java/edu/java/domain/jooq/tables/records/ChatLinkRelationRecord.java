/*
 * This file is generated by jOOQ.
 */

package edu.java.domain.jooq.tables.records;

import edu.java.domain.jooq.tables.ChatLinkRelation;
import java.beans.ConstructorProperties;
import java.util.UUID;
import javax.annotation.processing.Generated;
import org.jetbrains.annotations.NotNull;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class ChatLinkRelationRecord extends UpdatableRecordImpl<ChatLinkRelationRecord> implements Record2<Long, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Create a detached ChatLinkRelationRecord
     */
    public ChatLinkRelationRecord() {
        super(ChatLinkRelation.CHAT_LINK_RELATION);
    }

    /**
     * Create a detached, initialised ChatLinkRelationRecord
     */
    @ConstructorProperties({"chatId", "linkId"})
    public ChatLinkRelationRecord(@NotNull Long chatId, @NotNull UUID linkId) {
        super(ChatLinkRelation.CHAT_LINK_RELATION);

        setChatId(chatId);
        setLinkId(linkId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ChatLinkRelationRecord
     */
    public ChatLinkRelationRecord(edu.java.domain.jooq.tables.pojos.ChatLinkRelation value) {
        super(ChatLinkRelation.CHAT_LINK_RELATION);

        if (value != null) {
            setChatId(value.getChatId());
            setLinkId(value.getLinkId());
            resetChangedOnNotNull();
        }
    }

    /**
     * Getter for <code>CHAT_LINK_RELATION.CHAT_ID</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getChatId() {
        return (Long) get(0);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * Setter for <code>CHAT_LINK_RELATION.CHAT_ID</code>.
     */
    public void setChatId(@NotNull Long value) {
        set(0, value);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>CHAT_LINK_RELATION.LINK_ID</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public UUID getLinkId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>CHAT_LINK_RELATION.LINK_ID</code>.
     */
    public void setLinkId(@NotNull UUID value) {
        set(1, value);
    }

    @Override
    @NotNull
    public Record2<Long, UUID> key() {
        return (Record2) super.key();
    }

    @Override
    @NotNull
    public Row2<Long, UUID> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row2<Long, UUID> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<Long> field1() {
        return ChatLinkRelation.CHAT_LINK_RELATION.CHAT_ID;
    }

    @Override
    @NotNull
    public Field<UUID> field2() {
        return ChatLinkRelation.CHAT_LINK_RELATION.LINK_ID;
    }

    @Override
    @NotNull
    public Long component1() {
        return getChatId();
    }

    @Override
    @NotNull
    public UUID component2() {
        return getLinkId();
    }

    @Override
    @NotNull
    public Long value1() {
        return getChatId();
    }

    @Override
    @NotNull
    public UUID value2() {
        return getLinkId();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public ChatLinkRelationRecord value1(@NotNull Long value) {
        setChatId(value);
        return this;
    }

    @Override
    @NotNull
    public ChatLinkRelationRecord value2(@NotNull UUID value) {
        setLinkId(value);
        return this;
    }

    @Override
    @NotNull
    public ChatLinkRelationRecord values(@NotNull Long value1, @NotNull UUID value2) {
        value1(value1);
        value2(value2);
        return this;
    }
}
