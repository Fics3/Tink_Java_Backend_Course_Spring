app:
  telegram-token: ${TELEGRAM_API_KEY}

  scrapper-properties:
    chat: /tg-chat/{id}
    links: /links
    tg-chat-id: Tg-Chat-Id
    url: ${SCRAPPER_URL}

  kafka-properties:
    topic:
      name: topic1
      partitions-num: 10
      replicas-num: 1
    dlq-topic:
      name: topic_dlq
      partitions-num: 10
      replicas-num: 1

  retry-properties:
    attempts: 10
    backoff: 2s
    backoff-strategy: linear
    retry-status-codes:
      - 500
      - 502
      - 503
      - 404
  rate-limit-property:
    delay-refill: 30s
    limit: 100
    refill-limit: 20


spring:
  application:
    name: bot
  jackson:
    time-zone: UTC
  kafka:
    consumer:
      auto-offset-reset: earliest
    bootstrapServers: ${KAFKA_BOOTSTRAP_SERVERS}

management:
  server:
    port: ${MANAGEMENT_PORT}
  endpoints:
    web:
      exposure:
        include: health, info, prometheus
      base-path: /
      path-mapping:
        prometheus: /metrics
  metrics:
    tags:
      application: ${spring.application.name}


server:
  port: ${SERVER_PORT}

logging:
  config: classpath:log4j2-plain.xml

springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    path: /swagger-ui
