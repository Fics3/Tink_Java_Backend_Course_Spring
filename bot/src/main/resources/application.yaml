app:
  telegram-token: ${TELEGRAM_API_KEY}
  kafka-properties:
    dlq-topic:
      name: topic_dlq
      partitions-num: 10
      replicas-num: 1

client:
  scrapper-properties:
    chat: /tg-chat/{id}
    links: /links
    tg-chat-id: Tg-Chat-Id
    url: http://localhost:8080
    retry-policy:
      attempts: 10
      backoff: 2s
      backoff-strategy: linear
      retry-status-codes:
        - 500
        - 502
        - 503
        - 404

spring:
  application:
    name: bot
  jackson:
    time-zone: UTC
  cache:
    jcache:
      provider: com.github.benmanes.caffeine.jcache.spi.CaffeineCachingProvider
    cache-names:
      - buckets
    caffeine:
      spec: maximumSize=100000,expireAfterAccess=3600s
  kafka:
    consumer:
      auto-offset-reset: earliest
    bootstrapServers: ${KAFKA_BOOTSTRAP_SERVERS}
  liquibase:
    enabled: false

bucket4j:
  enabled: true
  filters:
    - cache-name: buckets
      url: .*
      http-response-body: "{ \"status\": 429, \"error\": \"Too Many Requests\", \"message\": \"You have exhausted your API Request Quota\" }"
      rate-limits:
        - cache-key: "getRemoteAddr()"
          bandwidths:
            - capacity: 100
              time: 100
              unit: seconds
              refill-capacity: 50
              refill-speed: greedy

server:
  port: 8090

logging:
  config: classpath:log4j2-plain.xml

springdoc:
  api-docs:
    enabled: true

swagger-ui:
  path: /swagger-ui
